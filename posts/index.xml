<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Posts on b1d0ws</title>
        <link>https://b1d0ws.github.io/posts/</link>
        <description>Recent content in Posts on b1d0ws</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en-us</language>
        <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CC BY-NC 4.0&lt;/a&gt;</copyright>
        <lastBuildDate>Wed, 13 Apr 2022 15:20:50 -0300</lastBuildDate>
        <atom:link href="https://b1d0ws.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
        
        <item>
            <title>Burpsuite - How to configure and start using the Proxy</title>
            <link>https://b1d0ws.github.io/posts/burpsuite/</link>
            <pubDate>Wed, 13 Apr 2022 15:20:50 -0300</pubDate>
            
            <guid>https://b1d0ws.github.io/posts/burpsuite/</guid>
            <description>Introduction BurpSuite is a tool with several functions used for penetration testing on web applications. It is indispensable when doing a pentest or an EHT (Ethical Hacking Test), because it allows us to do a deep analysis of the requests and responses made between client and server.
Instalation The software installation is trivial, just download it and follow the procedure. Available for Windows, Linux (pre-installed on Kali) and Mac, it has two versions: Community and Professional.</description>
            <content type="html"><![CDATA[<h2 id="introduction"><strong>Introduction</strong></h2>
<p>BurpSuite is a tool with several functions used for penetration testing on web applications. It is indispensable when doing a pentest or an EHT (Ethical Hacking Test), because it allows us to do a deep analysis of the <em>requests and responses</em> made between client and server.</p>
<h2 id="instalation"><strong>Instalation</strong></h2>
<p>The software installation is trivial, just download it and follow the procedure. Available for Windows, Linux (pre-installed on Kali) and Mac, it has two versions: Community and Professional.</p>
<p>The community version is free to use, while the professional version is the paid version that brings some benefits like speeding up processes (brute-force in Intruder for example), additional functions and exclusive plugins.</p>
<p>Download Link &ndash;&gt; <a href="https://portswigger.net/burp/communitydownload">https://portswigger.net/burp/communitydownload</a></p>
<h2 id="configuration"><strong>Configuration</strong></h2>
<p>As soon as you open the software, the Temporary project option will normally be selected in the Comunnity version. You can use the other options if you are working with an existing project or one that is to be saved if you have the Professional Edition.</p>
<p><img src="/burpsuite/Image1.png" alt="image1"></p>
<p><br>
Here we select the default Burp configuration because we don&rsquo;t have one already set up.</p>
<p><img src="/burpsuite/Image2.png" alt="image2"></p>
<p><br>
This is the default screen when you start BurpSuite.</p>
<p><img src="/burpsuite/Image3.png" alt="image3"></p>
<p><br>
In order to capture the requests made in our browser, we need to configure the browser to use a <em>proxy</em>. We can manually configure this option by going into the browser&rsquo;s settings, however, this would need to be done every time we use the Burp, since browsing with the proxy on all the time is not the best experience possible.</p>
<p>To make the process easier we use an extension called <em>Foxy Proxy</em>, which will serve as a proxy to capture our requests.</p>
<p><img src="/burpsuite/Image4.png" alt="image4"></p>
<p><br>
In the upper right corner of the browser we select the extension and click options.</p>
<p><img src="/burpsuite/Image5.png" alt="image5"></p>
<p><br>
Click on add.</p>
<p><img src="/burpsuite/Image6.png" alt="image6"></p>
<p><br>
Then we apply the following settings and save.</p>
<p>Title - As you wish</p>
<p>Proxy IP - 127.0.0.1 (localhost)</p>
<p>Port – 8080</p>
<p><img src="/burpsuite/Image7.png" alt="image7"></p>
<p><br>
Once this is done, we just turn on the extension and our proxy will be active. From now on every request will be captured and pass through the Burp, so you will notice that the pages don&rsquo;t &ldquo;walk&rdquo;. To stop the captures just choose the &ldquo;Turn Off&rdquo; option.</p>
<p><img src="/burpsuite/Image8.png" alt="image8"></p>
<p><br>
An extra and interesting configuration to do is to add the <em>PortSwigger</em> (Burp&rsquo;s owner) <em>Certificate</em> so that we can browse without interruptions warning about strange certificates.</p>
<p>To do this, follow the steps below.</p>
<p>Go to http://burpsuite/ with Burp open and the proxy enabled.</p>
<p>Click on <em>CA Certificate</em> in the upper right corner to download the certificate.</p>
<p>Then go into Firefox settings and in the <em>Privacy and Security</em> tab scroll down to the Certificates part.</p>
<p><img src="/burpsuite/Certificate.png" alt="certificate"></p>
<p><br>
Go to <em>View Certificates&hellip;</em> and click <em>Import&hellip;</em></p>
<p>Import the newly downloaded certificate and check the Trust this CA to identify sites option and hit OK.</p>
<p>Now you are ready to go!</p>
<h2 id="proxy"><strong>Proxy</strong></h2>
<p>The <em>Proxy tab</em> will probably be the one you will use the most, but first let&rsquo;s go through the Target tab to define which websites we want to capture requests from.</p>
<h4 id="defining-the-scope"><strong>Defining the Scope</strong></h4>
<p>In the <em>Site map sub-tab</em> click on the phrase pointed by the arrow and check the Show only in-scope items option.</p>
<p><img src="/burpsuite/Image9.png" alt="image9"></p>
<p><br>
In the <em>Scope sub-tab</em> we add the sites or domains we want to intercept and give a Yes to the next message.</p>
<p><img src="/burpsuite/Image10.png" alt="image10"></p>
<p><br>
Finally, we have to check the option indicated below located in the <em>Options sub-tab</em> of the Proxy tab.</p>
<p><img src="/burpsuite/Image11.png" alt="image11"></p>
<p>Now it&rsquo;s much better to work, we can search other sites in the same browser without being intercepted on each request.</p>
<p><br>
As soon as we try to access the our target site we already notice that the Proxy tab is receiving something.</p>
<p><img src="/burpsuite/Image12.png" alt="image12"></p>
<p>What you are seeing is a <em>request</em>, in this case a <em>GET</em>, as we can see in line 1, that is requesting page / from the host testphp.vulnweb.com. To proceed we can click <em>Forward</em>.</p>
<p>Notice that we see written on the other box <em>&ldquo;Intercept is on&rdquo;</em>. We can click on it to disable the intercepts as well.</p>
<p><br>
To analyze the response that the server gave us, we can right click on the request and select <em>Response to this request</em> and as soon as we click Forward we will see the response.</p>
<p>Basically this response brings us the site page in the body and some interesting information in the header.</p>
<p><img src="/burpsuite/Image13.png" alt="image13"></p>
<p><img src="/burpsuite/Image14.png" alt="image14"></p>
<p>In line 1 we have the communication method used (HTTP) and the response code obtained from that request (200 OK). It is important to know which are the most common response codes, so below I will leave a list of them.</p>
<p>On line 2 we have the information about which server is used and its respective version. This is a security flaw known as Information Disclosure.</p>
<p>We are telling the user what server version we are using and this can be very bad if it is outdated, because the chances of having loopholes/exploits are considerable.</p>
<p>On the 6th line we have another Information Disclosure, now revealing the programming language and operating system on which the application is hosted.</p>
<p>Under Content-Lenght is the body of the response, that is, what we will return to the users. In this case it will be an HTML page.</p>
<p><br>
Here is a list of the most common HTTP responses:</p>
<p><img src="/burpsuite/Image15.png" alt="image15"></p>
<h2 id="conclusion">Conclusion</h2>
<p>Now that you have Burpsuite properly configured, you can use it to perform attacks and search for vulnerabilities on web applications using the proxy to change the intercepted requests.</p>
<p>This was just an introduction on how to configure the tool, but you should dig deeper into it and learn how to use the other functions like Intruder and Repeater that can be very useful in the daily life of a pentester.</p>
<p>See ya =).</p>
<h2 id="references">References</h2>
<p><a href="https://www.geeksforgeeks.org/what-is-burp-suite/">https://www.geeksforgeeks.org/what-is-burp-suite/</a></p>
<p><a href="https://portswigger.net/burp/documentation/desktop">https://portswigger.net/burp/documentation/desktop</a></p>
]]></content>
        </item>
        
        <item>
            <title>O Básico de Elevação de Privilégios em Linux</title>
            <link>https://b1d0ws.github.io/posts/linux-privesc/</link>
            <pubDate>Thu, 10 Mar 2022 10:30:50 -0300</pubDate>
            
            <guid>https://b1d0ws.github.io/posts/linux-privesc/</guid>
            <description>Olá, pessoal!
No artigo de hoje estarei mostrando a vocês algumas técnicas simples para escalação de privilégio em Linux.
Esse texto aborda algumas táticas extremamente fáceis que vão pelo menos te direcionar em alguns CTFs básicos. Se você já estudou algo sobre, provavelmente já terá conhecimento de tudo que mostrarei aqui, então você pode utilizar isso como uma revisão.
Mas antes de mais nada, o que é elevação de privilégios? Não tem muito segredo, é basicamente o que o nome diz!</description>
            <content type="html"><![CDATA[<p>Olá, pessoal!</p>
<p>No artigo de hoje estarei mostrando a vocês algumas técnicas simples para escalação de privilégio em Linux.</p>
<p>Esse texto aborda algumas táticas extremamente fáceis que vão pelo menos te direcionar em alguns CTFs básicos. Se você já estudou algo sobre, provavelmente já terá conhecimento de tudo que mostrarei aqui, então você pode utilizar isso como uma revisão.</p>
<p>Mas antes de mais nada, o que é elevação de privilégios? Não tem muito segredo, é basicamente o que o nome diz! É você escalar seus privilégios dentro de uma máquina, passando de um usuário comum para um usuário com mais permissões, passando de um usuário comum para root por exemplo.</p>
<h2 id="enumeração-do-sistema"><strong>Enumeração do Sistema</strong></h2>
<p>Como um bom pentester, você sabe que tudo começa com uma boa enumeração. Então é sempre recomendado coletar algumas informações do sistema com os comandos abaixo.</p>
<p><em>Ver informações do sistema</em><br>
uname -a<br>
cat /proc/version<br>
cat /etc/issue</p>
<p><em>Ver informações dos usuários</em><br>
id<br>
cat /etc/passwd</p>
<p><em>Ver variáveis de ambiente</em><br>
env</p>
<p><em>Procurar por arquivos interessantes como:</em><br>
~/.bash_history<br>
/home/user/.ssh/id_rsa<br>
/var/shadow.bak</p>
<h2 id="ferramentas-automatizadas"><strong>Ferramentas Automatizadas</strong></h2>
<p>Após a enumeração manual do sistema, é muito recomendado que você utilize pelo menos uma ferramenta automatizada para procurar por possíveis caminhos para a escalação de privilégios. Abaixo eu listo algumas ferramentas que fazem esse processo, sendo o LinPeas a mais utilizada e a que eu mais recomendo também.</p>
<ul>
<li>
<p><a href="https://github.com/carlospolop/PEASS-ng/tree/master/linPEAS">LinPeas</a></p>
</li>
<li>
<p><a href="https://github.com/rebootuser/LinEnum">LinEnum</a></p>
</li>
<li>
<p><a href="https://github.com/jondonas/linux-exploit-suggester-2">LES (Linux Exploit Suggester) 2</a></p>
</li>
<li>
<p><a href="https://github.com/diego-treitos/linux-smart-enumeration">Linux Smart Enumeration</a></p>
</li>
<li>
<p><a href="https://github.com/sleventyeleven/linuxprivchecker">Linux Priv Checker</a></p>
</li>
</ul>
<p>Ao executar a ferramenta, basta analisar o output dela e procurar por falhas que permitirão a escalação de privilégios. É claro que se você ainda não viu as vulnerabilidades abaixo provavelmente não saberá como explorar os pontos indicados por essas ferramentas.</p>
<h2 id="kernel"><strong>Kernel</strong></h2>
<p>Existem diversas versões de Kernel e algumas possuem vulnerabilidades que permitem a escalação de privilégio. Se você realizou a enumeração do sistema, já deve ter identificado qual a versão do Kernel utilizado.</p>
<p>Com essa informação, você pode procurar como explorar a versão encontrada. Um dos ataques mais conhecidos é o Dirty Cow que afeta Kernels 2.x até 4.x, antes de 4.8.3. Se foi identificado uma dessas versões, vale a tentativa de exploração.</p>
<p>A ferramenta Linux Exploit Suggester analisa isso de forma automatizada, como indicado na figura abaixo. Com o output, podemos percebemos que o sistema está vulnerável ao Dirty Cow.</p>
<p><img src="/linux-privesc/kernel-exploits.png" alt="LES-2"></p>
<p>Acessamos o site <a href="https://dirtycow.ninja/">https://dirtycow.ninja/</a> para pegar o exploit e o utilizamos.</p>
<p><img src="/linux-privesc/dirty-cow.png" alt="dirty-cow"></p>
<h2 id="permissões-sudo"><strong>Permissões Sudo</strong></h2>
<p>No Linux, existe um arquivo chamado /etc/sudoers que basicamente pode atribuir aos usuários permissões para executar comandos como root.</p>
<p>Observe na imagem abaixo, a primeira linha não comentada indica que o usuário root pode executar todos os comandos como sudo, sendo esse um comportamento padrão. Na segunda linha, está sendo indicado que o usuário kali pode executar o comando find como root, sem a necessidade de senha (NOPASSWD).</p>
<p>Para entender mais sobre a estrutura desse arquivo eu recomendo <a href="https://medium.com/analytics-vidhya/how-to-add-users-to-sudoers-file-in-ubuntu-e89c24b7369d">esse artigo</a>.</p>
<p><img src="/linux-privesc/etc-sudoers.png" alt="/etc/sudoers"></p>
<p>A questão é: como ver quais comandos podemos executar como root se não temos acesso ao arquivo /etc/sudoers?</p>
<p>O comando <em>sudo -l</em> indica isso pra você como mostrado abaixo.</p>
<p>Assim que identificado o comando que você pode executar como root, para saber se existe alguma forma de utilizá-lo para elevação de privilégio, você pode olhar o site <a href="https://gtfobins.github.io/">GTFOBins</a> e conferir se existe algum comando listado em Sudo para se tornar root.</p>
<p><img src="/linux-privesc/find-root.png" alt="sudo-l"></p>
<p><img src="/linux-privesc/gtfobins-find.png" alt="gtfo-find"></p>
<p>É importante frisar que cada comando tem um jeito para escalar privilégio e obviamente nem todos eles possuem essa capacidade. Um exemplo diferente seria ter permissão para executar o cat. Com esse comando, você pode ler qualquer arquivo do sistema, então poderia procurar por flags como /root/root.txt ou analisar o /etc/shadow em busca de hashes.</p>
<h2 id="suid"><strong>SUID</strong></h2>
<p>Um pouco parecido com a exploração de Permissões Sudo, temos a exploração de SUID. Arquivos SUID tem uma permissão especial que determina que o arquivo/programa vai ser executado com a permissão do dono (owner).</p>
<p>Sendo assim, se algum comando que possui a habilidade de escalar privilégio ter o SUID vinculado ao usuário root, o sistema está vulnerável à escalação de privilégio.
Para procurar arquivos com SUID, você pode usar o comando:<br>
<em>find / -type f -perm -04000 -ls 2&gt;/dev/null</em></p>
<p>No começo pode ser confuso e difícil analisar qual comando pode ser utilizado, mas com a prática você terá facilidade nesse quesito.</p>
<p>No resultado abaixo, percebemos que <em>/usr/bin/bash</em> tem o SUID para o usuário root. Agora podemos procurar esse comando no gtfobins e utilizar as sintaxes que aparecem em SUID.</p>
<p><img src="/linux-privesc/suid.png" alt="suids"></p>
<p><img src="/linux-privesc/gtfobins-bash.png" alt="gtfo-bash"></p>
<p>Para saber mais sobre SUID e outras permissões especiais, acesse <a href="https://www.redhat.com/sysadmin/suid-sgid-sticky-bit">este link</a>.</p>
<h2 id="cron-jobs"><strong>Cron Jobs</strong></h2>
<p>Cron Jobs são utilizados no Linux para executar scripts em um intervalo regular de tempo e são muito úteis para programar tarefas automatizadas. Entretanto, isso por ser um fator para escalação de privilégio.</p>
<p>Você pode checar os cron jobs da maquina no arquivo <em>/etc/crontab</em>. Na imagem abaixo percebemos que existe uma tarefa que executa o arquivo /home/kali/backup.sh a cada minuto. O intervalo de tempo é indicado pelo trecho * * * * *.</p>
<p>Existe uma estrutura por trás dessa sintaxe que você pode entender melhor através <a href="https://ostechnix.com/a-beginners-guide-to-cron-jobs/">desse link</a>.</p>
<p><img src="/linux-privesc/crontab.png" alt="crontabs"></p>
<p>Analisando o arquivo, percebemos que ele faz um backup da pasta notes. A forma para explorar essa falha é editar o arquivo backup.sh com algum comando que nos dê o acesso ao root.</p>
<p>Nesse caso, podemos inserir o comando abaixo que abre uma conexão em nossa máquina atacante na porta 3333. Como o script será executado como root, nossa conexão também será realizada com esse usuário.</p>
<p><img src="/linux-privesc/backup.sh.png" alt="backup.sh"></p>
<p>Agora basta salvar o arquivo e esperar a tarefa ser executada (a cada minuto) ouvindo a porta que você indicou no comando.</p>
<p><img src="/linux-privesc/crontab-root.png" alt="listener"></p>
<h2 id="pwnkit"><strong>PwnKit</strong></h2>
<p>PwnKit é uma vulnerabilidade recém encontrada que afeta a maioria das distribuições Linux que utilizam de um serviço chamado PolKit. Ela foi registrada como a <a href="https://nvd.nist.gov/vuln/detail/CVE-2021-4034">CVE-2021-4034</a> e permite o escalonamento de privilégio.</p>
<p>A maioria das máquinas em que eu tentei utilizar essa falha era vulnerável, pois somente as versões mais atuais das distribuições corrigem esse bug. Basta rodar alguma ferramenta automatizada das que indiquei que o output indicará se o sistema é vulnerável.</p>
<p>Se você pegar um CTF mais antigo poderá usar essa tática para escalar privilégio, mas provavelmente essa não foi uma falha inserida propositalmente, então não deve ser esse o caminho a ser tomado para conseguir o root da maneira proposta pelo desafio.</p>
<p>A exploração é extremamente simples e pode ser encontrada <a href="https://github.com/arthepsy/CVE-2021-4034">aqui</a>.</p>
<p>Abaixo você pode ver a exploração sendo realizada em uma <a href="https://tryhackme.com/room/pwnkit">máquina do tryhackme</a> feita para aprender a explorar essa vulnerabilidade.</p>
<p><img src="/linux-privesc/pwnkit-thm.png" alt="pwnkit"></p>
<p>Se você quiser saber mais sobre, acesse <a href="https://blog.qualys.com/vulnerabilities-threat-research/2022/01/25/pwnkit-local-privilege-escalation-vulnerability-discovered-in-polkits-pkexec-cve-2021-4034">esse link</a>.</p>
<h2 id="checklist"><strong>Checklist</strong></h2>
<ul>
<li>Descobrir a versão do kernel e se existe alguma exploração como Dirtyc0w;</li>
<li>Procurar por credenciais, contas de usuários e diretórios com permissões más configuradas;</li>
<li>Ver quais comandos você pode utilizar como root;</li>
<li>Procurar por serviços ou aplicações que podem ser exploradas como SUID e PwnKit;</li>
<li>Procurar por scripts automatizados como tarefas de backup no crontab.</li>
</ul>
<h2 id="conclusão"><strong>Conclusão</strong></h2>
<p>Nesse artigo foram passadas algumas técnicas básicas para escalação de privilégios em Linux. Apesar de simples, elas são muito utilizadas em CTFs e também aparecem em casos reais de exploração.</p>
<p>Existem diversas outras maneiras de explorar um sistema como uso de Capabilities, exploração de PATH, NFS, LXD, entre outras, mas que não cabem nesse guia básico.</p>
<p>Espero que você possa usufruir de algo que tenha aprendido aqui.</p>
<p>Até mais ver =).</p>
]]></content>
        </item>
        
        <item>
            <title>Ferramentas Para Enumeração de Subdomínios</title>
            <link>https://b1d0ws.github.io/posts/subdomains/</link>
            <pubDate>Wed, 02 Mar 2022 15:20:50 -0300</pubDate>
            
            <guid>https://b1d0ws.github.io/posts/subdomains/</guid>
            <description>Olá, pessoal!
No texto de hoje estarei mostrando as principais ferramentas para enumeração de subdomínios, técnica muito utilizada para colher informações e possíveis alvos para aumentar a superfície de ataque de um alvo.
A enumeração é uma das primeiras fases de um CTF, pentest ou análise de vulnerabilidade de um sistema web. Algo que os atacantes enumeram são os subdomínios que estão relacionados ao domínio principal da vítima.
Hoje vou demonstrar algumas ferramentas que são utilizadas nesse processo e ensiná-los a baixar e utilizar esses auxiliares.</description>
            <content type="html"><![CDATA[<p>Olá, pessoal!</p>
<p>No texto de hoje estarei mostrando as principais ferramentas para enumeração de subdomínios, técnica muito utilizada para colher informações e possíveis alvos para aumentar a superfície de ataque de um alvo.</p>
<p>A enumeração é uma das primeiras fases de um CTF, pentest ou análise de vulnerabilidade de um sistema web. Algo que os atacantes enumeram são os subdomínios que estão relacionados ao domínio principal da vítima.</p>
<p>Hoje vou demonstrar algumas ferramentas que são utilizadas nesse processo e ensiná-los a baixar e utilizar esses auxiliares.</p>
<p>Para as instalações abaixo funcionarem, é necessário que você tenha python3 e GO instalado na sua máquina.</p>
<h2 id="sublist3r"><strong>sublist3r</strong></h2>
<h4 id="instalação">Instalação</h4>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">git clone https://github.com/aboul3la/Sublist3r.git
cd sublist3r
sudo pip install -r requirements.txt
</code></pre></div><h4 id="uso">Uso</h4>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">python3 sublist3r.py -h <span style="color:#75715e"># Ver ajuda</span>
python3 sublist3r.py -d $url <span style="color:#75715e"># Definir o domínio a ser enumerado</span>
python3 sublist3r.py -v -d $url <span style="color:#75715e"># Enumerar no modo verboso</span>
python3 sublist3r.py -b -d $url <span style="color:#75715e"># Brute-force nos domínios</span>
</code></pre></div><h4 id="exemplo">Exemplo</h4>
<p><img src="/subdomains/sublist3r.png" alt="sublist3r"></p>
<h2 id="amass"><strong>amass</strong></h2>
<h4 id="instalação-1">Instalação</h4>
<p>OBS: O comando <code>mv [ferramenta] /usr/local/bin</code> move o arquivo para a pasta /usr/local/bin fazendo com que a ferramenta possa ser invocada de qualquer diretório.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">wget https://github.com/OWASP/Amass/releases/download/v3.17.0/amass_linux_arm64.zip
unzip amass_linux_arm64.zip
cd amass_linux_arm64
mv amass /usr/local/bin
</code></pre></div><h4 id="uso-1">Uso</h4>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">amass enum -h <span style="color:#75715e"># Ver ajuda</span>
amass enum -d $url <span style="color:#75715e"># Definir o domínio a ser enumerado</span>
amass enum -silent -d $url <span style="color:#75715e"># Não exibe a saída no terminal</span>
amass enum -o exemplo.txt -d $url <span style="color:#75715e"># Joga a saída para o arquivo exemplo.txt</span>
</code></pre></div><h4 id="exemplo-1">Exemplo</h4>
<p><img src="/subdomains/amass.png" alt="amass"></p>
<h2 id="assetfinder"><strong>assetfinder</strong></h2>
<h4 id="instalação-2">Instalação</h4>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">go get -u github.com/tomnomnom/assetfinder
<span style="color:#75715e"># Localize aonde a ferramenta foi instalada.</span>
<span style="color:#75715e"># Como eu instalei com o usuário root, ela está em /root/go/bin/</span>
mv /root/go/bin/assetfinder /usr/local/bin
</code></pre></div><h4 id="uso-2">Uso</h4>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">assetfinder --subs-only $url <span style="color:#75715e"># Definir o domínio (target) a ser enumerado</span>
</code></pre></div><h4 id="exemplo-2">Exemplo</h4>
<p><img src="/subdomains/assetfinder.png" alt="assetfinder"></p>
<h2 id="findomain"><strong>findomain</strong></h2>
<h4 id="instalação-3">Instalação</h4>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">wget https://github.com/findomain/findomain/releases/latest/download/findomain-linux
chmod +x findomain-linux
mv /root/go/bin/findomain-linux /usr/local/bin
</code></pre></div><h4 id="uso-3">Uso</h4>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">findomain-linux -h <span style="color:#75715e"># Ver ajuda</span>
findomain-linux -t $url <span style="color:#75715e"># Definir o domínio (target) a ser enumerado</span>
findomain-linux -q -t $url <span style="color:#75715e"># Não exibe a saída no terminal</span>
findomain-linux -v -t $url <span style="color:#75715e"># Modo verboso</span>
findomain-linux -o -t $url <span style="color:#75715e"># Joga a saída para um arquivo. O nome do arquivo será o nome do domínio no formato txt</span>
</code></pre></div><h4 id="exemplo-3">Exemplo</h4>
<p><img src="/subdomains/findomain.png" alt="findomain"></p>
<h2 id="subfinder"><strong>subfinder</strong></h2>
<h4 id="instalação-4">Instalação</h4>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">GO111MODULE<span style="color:#f92672">=</span>on go get -v github.com/projectdiscovery/subfinder/v2/cmd/subfinder
mv /root/go/bin/subfinder /usr/local/bin
</code></pre></div><h4 id="uso-4">Uso</h4>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">subfinder -d $url <span style="color:#75715e"># Definir o domínio a ser enumerado</span>
subfinder -silent -d $url <span style="color:#75715e"># Não exibe a saída no terminal</span>
subfinder -o exemplo.txt -d $url <span style="color:#75715e"># Joga a saída para o arquivo exemplo.txt</span>
</code></pre></div><h4 id="exemplo-4">Exemplo</h4>
<p><img src="/subdomains/subfinder.png" alt="subfinder"></p>
<h2 id="script"><strong>Script</strong></h2>
<p>Para facilitar o uso dessas ferramentas eu criei um script que junta algumas tools citadas nesse artigo que encontra-se <a href="https://github.com/b1d0ws/enumSubs">nesse link</a>.</p>
<p>Note que esse é um script criado para uso pessoal, então ele conta com ferramentas que precisam estar pré-instaladas e acessíveis globalmente para funcionar corretamente, sendo elas:</p>
<ul>
<li>assetFinder</li>
<li>findomain-linux</li>
<li>subfinder</li>
<li>amass</li>
<li>anew</li>
<li>httpx</li>
</ul>
<p>Basicamente o script roda todas as ferramentas de enumeração e cria um arquivo para cada resultado, além de criar um arquivo com todos os subdomínios encontrados e outro com todos os que estão acessíveis.</p>
<p><img src="/subdomains/script.png" alt="script"></p>
<h2 id="conclusão"><strong>Conclusão</strong></h2>
<p>Nesse artigo foram apresentadas 5 ferramentas para enumeração de subdomínios, sendo essa uma parte muito importante na hora de realizar um pentest, análise de vulnerabilidades, entre outras atividades que envolvem o mapeamento de um alvo.</p>
<p>Com a realização dessa enumeração, a superfície que pode sofrer ataques e possuir vulnerabilidades muitas vezes aumenta consideravelmente.</p>
<p>Até mais ver =).</p>
]]></content>
        </item>
        
        <item>
            <title>Tipos de Malware</title>
            <link>https://b1d0ws.github.io/posts/malwares/</link>
            <pubDate>Thu, 30 Dec 2021 15:20:50 -0300</pubDate>
            
            <guid>https://b1d0ws.github.io/posts/malwares/</guid>
            <description>Introdução O termo malware descreve uma variedade de software que é intencionalmente projetado para causar danos a sistemas, dispositivos ou redes, sem o conhecimento ou consentimento dos usuários. Neste artigo descreverei os principais tipos de malware existentes dentro da cibersegurança.
Vírus Antes de mais nada, quero esclarecer aqui a diferença entre malware e vírus, pois, muita gente acaba confundindo os dois.
Como dito na introdução, malware é um conceito mais genérico que se refere aos softwares usados com intuitos maliciosos, enquanto o vírus é um tipo de malware existente, ou seja, todo vírus de computador é um malware, mas nem todo malware é um vírus.</description>
            <content type="html"><![CDATA[<p><img src="/malwares-types/malware-banner.jpg" alt="Malware Banner"></p>
<h2 id="introdução">Introdução</h2>
<p>O termo malware descreve uma variedade de software que é intencionalmente projetado para causar danos a sistemas, dispositivos ou redes, sem o conhecimento ou consentimento dos usuários. Neste artigo descreverei os principais tipos de malware existentes dentro da cibersegurança.</p>
<h2 id="vírus">Vírus</h2>
<p>Antes de mais nada, quero esclarecer aqui a diferença entre malware e vírus, pois, muita gente acaba confundindo os dois.</p>
<p>Como dito na introdução, malware é um conceito mais genérico que se refere aos softwares usados com intuitos maliciosos, enquanto o vírus é um tipo de malware existente, ou seja, todo vírus de computador é um malware, mas nem todo malware é um vírus.</p>
<p>Vírus são códigos maliciosos que rodam em uma máquina e que, quando executados, infectam o computador, normalmente exigindo uma ação do usuário a fim de se reproduzir e se espalhar utilizando da sua capacidade de autorreplicação.</p>
<h3 id="tipos-de-vírus">Tipos de vírus</h3>
<ul>
<li>
<p>Programa — Executável ou aplicativo infectado (mais comum).</p>
</li>
<li>
<p>Setor de Inicialização — Os vírus são armazenados no primeiro setor de um disco rígido e são carregados na memória no momento da inicialização.</p>
</li>
<li>
<p>Macro — Embutido em um documento e é executado quando o documento é aberto pelo usuário.</p>
</li>
<li>
<p>Multipartido — Combina vírus de inicialização e de programa para primeiro se conectar ao setor de inicialização e aos arquivos do sistema antes de atacar outros arquivos no computador.</p>
</li>
<li>
<p>Criptografado — Vírus criptografado.</p>
</li>
<li>
<p>Polimórfico — Versão avançada de um vírus criptografado que se altera cada vez que é executado, alterando o módulo de descriptografia para evitar a detecção.</p>
</li>
<li>
<p>Metamórfico — Capaz de se reescrever inteiramente antes de tentar infectar um arquivo.</p>
</li>
<li>
<p>Blindado — Tem uma camada de proteção para confundir um programa ou pessoa que o analisa.</p>
</li>
</ul>
<h2 id="ransomware">Ransomware</h2>
<p>Ransomwares são malwares que restringem o acesso ao seu sistema ou dados, criptografando o máximo de arquivos possíveis de uma vítima, até que um resgate seja recebido. O Ransomware usa uma vulnerabilidade em seu ambiente para obter acesso e depois criptografa seus arquivos, mantendo-os assim até que o resgate seja pago.</p>
<p>Ultimamente esse tipo de ataque vem sendo muito popular e trazendo grandes prejuízos às empresas. Com o aumento dessa exploração, muitas instituições estão investindo pesado em resposta a incidentes para saber como lidar caso uma situação dessa aconteça.</p>
<p>Normalmente, a existência de um bom backup faz com que essa ação maliciosa seja contida, porém, ainda se faz necessário a investigação de qual foi a porta de entrada para o atacante e conter essa vulnerabilidade. Não é recomendado que o resgate seja pago.</p>
<h2 id="trojans">Trojans</h2>
<p>Trojans ou cavalos de troia são um tipo de malware que normalmente é disfarçado como um software legítimo e inofensivo. Existem também os trojans de acesso remoto (RAT) que fornecem ao atacante o controle remoto do computador da vítima e são utilizados para manter um acesso constante, sendo normalmente o mais utilizado.</p>
<h2 id="worms">Worms</h2>
<p>Os worms (vermes), ao contrário dos cavalos de Troia que requerem interação do usuário, são capazes de replicação sem a interação do usuário.</p>
<p>Os worms podem causar perturbações no tráfego normal da rede e nas atividades computacionais devido a capacidade de alta de propagação.</p>
<h2 id="rootkits">Rootkits</h2>
<p>Rootkits são malwares projetados especificamente para permitir o acesso de atacantes a um sistema através de uma porta traseira (backdoor).</p>
<p>A injeção de DLL é comumente usada por rootkits para manter seu controle persistente, onde o código malicioso é inserido em um processo em execução em uma máquina Windows, aproveitando as bibliotecas Dynamic Link Libraries que são carregadas em tempo de execução.</p>
<h2 id="backdoors">Backdoors</h2>
<p>Backdoors são métodos ou ferramentas que permitem o acesso que ultrapassa os procedimentos normais de autenticação e autorização, permitindo aos atacantes o acesso a sistemas, dispositivos ou aplicações.</p>
<h2 id="bots">Bots</h2>
<p>Os bots ou zumbis são sistemas ou dispositivos controlados remotamente que já sofreram uma infecção por malware e que agora estão sob controle do atacante. Grupos de bots são conhecidos como botnets e são utilizados para realizar várias ações utilizando do processamento da máquina da vítima.</p>
<p>As botnets podem ser usadas para atacar serviços e aplicações. Os ataques distribuídos de negação de serviço (DDoS) contra aplicações são extremamente comuns nesse caso. Esses ataques também vêm sendo cada mais frequentes no cenário atual e se o ataque é massivo podemos ter certeza que envolve uma rede de bots por trás.</p>
<p>Conforme representa a imagem abaixo, o atacante também pode usar seus zumbis para realizar diversos ataques, desviando a origem desses ataques da sua máquina para às máquinas infectadas.</p>
<p><img src="/malwares-types/botnet.png" alt="Botnet"></p>
<h2 id="keyloggers">Keyloggers</h2>
<p>Os keyloggers são programas que principalmente capturam toques de teclas de teclados, embora também possam capturar outras entradas como movimento do mouse, entradas de tela sensível ao toque ou utilizações de cartão de crédito de dispositivos anexados.
Logic Bombs</p>
<p>As bombas lógicas não são programas maliciosos independentes. Elas são funções ou códigos que são colocados dentro de outros programas que serão ativados somente quando as condições estabelecidas forem cumpridas.</p>
<h2 id="fileless-malware">Fileless Malware</h2>
<p>Os ataques de malware sem arquivos (fileless) se espalham através de métodos como e-mail de spam e sites maliciosos e exploram falhas em plug-ins de navegadores e nos próprios navegadores da web. Em nenhum momento eles precisam de armazenamento local de arquivos, pois permanecem residentes na memória durante toda a sua vida ativa.</p>
<h2 id="spywares">Spywares</h2>
<p>Spyware (malware espião) é um malware que é projetado para obter informações sobre um indivíduo, organização ou sistema. Eles reúnem secretamente dados sobre o usuário sem o seu consentimento, capturando toques de teclas feitos pela vítima e realizando capturas de tela que são enviados ao atacante.</p>
<h2 id="adware">Adware</h2>
<p>Adwares ou malwares de anúncios são softwares que exibem anúncios indesejados baseados em espionagem sobre você. Normalmente eles vêm junto com programas ou softwares que baixados da internet.
Outros</p>
<p>Ataques realizados contra sistemas de inteligência artificial é um campo em desenvolvimento onde a inteligência artificial (IA) é utilizada por atacantes para fins maliciosos, fornecendo-lhes dados ruins ou modificando sua programação para produzir os efeitos maliciosos desejados. Com o avançado dessa tecnologia, esse ataque pode se tornar cada vez mais comum.</p>
<p>Programas Potencialmente Indesejados (PUPs) são programas que podem não ser desejados pelo usuário, mas não são tão perigosos quanto outros tipos de malwares.</p>
<h2 id="conclusão">Conclusão</h2>
<p>Ao conhecer os tipos de malwares, podemos ter uma noção melhor de possíveis ataques que nossa empresa pode vir a sofrer. É extremamente importante que uma corporação empresarial possua antivírus e anti malwares que identifiquem esses tipos de ataques e evitem os mesmos, pois, ataques visando prejuízos financeiros ou ganho de lucros por parte do atacante estão cada vez mais comuns.</p>
]]></content>
        </item>
        
        <item>
            <title>Controles Físicos em Segurança da Informação</title>
            <link>https://b1d0ws.github.io/posts/controles-fisicos/</link>
            <pubDate>Mon, 06 Dec 2021 15:20:50 -0300</pubDate>
            
            <guid>https://b1d0ws.github.io/posts/controles-fisicos/</guid>
            <description>Introdução Quanto o assunto é Segurança da Informação, provavelmente a maioria das pessoas pensam imediatamente em conceitos lógicos como defesa de redes através de firewalls, proteção de dados através de aplicações seguras, restrições de acesso remoto a servidores e afins.
Entretanto, muito se esquece dos controles físicos a esses elementos, o que deveria ser bem aplicado de maneira fundamental em qualquer empresa, visto que se um atacante pode tocar fisicamente em seus dispositivos, ele pode ganhar acesso sobre eles.</description>
            <content type="html"><![CDATA[<h2 id="introdução">Introdução</h2>
<p>Quanto o assunto é Segurança da Informação, provavelmente a maioria das pessoas pensam imediatamente em conceitos lógicos como defesa de redes através de firewalls, proteção de dados através de aplicações seguras, restrições de acesso remoto a servidores e afins.</p>
<p>Entretanto, muito se esquece dos controles físicos a esses elementos, o que deveria ser bem aplicado de maneira fundamental em qualquer empresa, visto que se um atacante pode tocar fisicamente em seus dispositivos, ele pode ganhar acesso sobre eles.</p>
<p>Alguns controles físicos comuns que mitigam ameaças são sistemas de alarmes, fechaduras, câmeras de vigilância, cartões de identificação e guardas de segurança.</p>
<p>O primeiro passo para prevenir o acesso físico é implementando um plano de segurança do local. A segurança do local analisa todas as instalações utilizadas por uma organização e implementa um plano baseado nas ameaças e riscos que são relevantes para cada local específico.</p>
<h2 id="segurança-das-instalações">Segurança das Instalações</h2>
<p>Algumas organizações usam <strong>camuflagem industrial</strong> para protegê-las e escondê-las de atacantes. Um exemplo comum são os locais discretos que as empresas escolhem para seus data centers.</p>
<p>Muitas instalações utilizam <strong>cercas</strong> como primeira linha de defesa. As cercas atuam como um elemento dissuasor, tanto fazendo parecer um desafio o acesso a uma instalação, quanto como uma defesa física real.</p>
<p>Um segundo controle físico comum é a colocação de <strong>barreiras de proteção</strong>. Os <strong>pilaretes (dissuasores)</strong> são postes ou outros obstáculos, como os mostrados abaixo, que impedem que veículos atravessem uma determinada área. Eles podem parecer postes, pilares ou até mesmo plantas para uma segurança mais despercebida. Alguns são projetados para serem removíveis ou acionados mecanicamente para que sejam levantados e abaixados conforme necessário.</p>
<p><img src="/controles-fisicos/bollards.jpg" alt="Pilaretes"></p>
<h2 id="câmeras-e-sensores">Câmeras e Sensores</h2>
<p>Os sistemas de câmeras são maneiras comuns de controle de segurança física, permitindo aos profissionais de segurança e outros observarem o que está acontecendo em tempo real e capturar imagens de vídeo de áreas e locais para uso futuro ao conduzir investigações.</p>
<p>As <strong>câmeras de reconhecimento</strong> de movimento são ativadas somente quando ocorre movimento, dessa forma poupando espaço em disco para armazenamento dos vídeos gravados.</p>
<p>As <strong>câmeras de detecção</strong> de objetos e tecnologias similares podem detectar objetos específicos ou possuem áreas específicas que vigiam possíveis mudanças.</p>
<p>Outra forma de câmera é um <strong>circuito fechado de televisão (CCTV)</strong> que exibe o que a câmera está vendo em uma tela em tempo real.</p>
<h2 id="fechaduras-de-portas">Fechaduras de Portas</h2>
<p>As fechaduras de portas podem utilizar chaves, pinos, sinais sem fios ou biométricos. Elas são um dos controles de segurança física mais comuns que você encontrará. A <strong>fechadura de cabo</strong> é uma solução comum para garantir que dispositivos como computadores ou outros hardwares não sejam removidos de um local.</p>
<h2 id="mantraps">Mantraps</h2>
<p>Algumas organizações usam <strong>vestíbulos de controle de acesso</strong> (frequentemente chamados de mantraps) como um meio de garantir que somente indivíduos autorizados tenham acesso a áreas seguras e que os atacantes não usem ataques de piggybacking/tailgating para entrar em lugares onde não deveriam estar.</p>
<p>Esse sistema é muito semelhante aos detectores de metal usados em bancos.</p>
<blockquote>
<p>Piggybacking e tailgating consistem em pegar “carona” com alguém que tem permissão e acesso, ou seja, tentar entrar despercebido em determinada região passando junto com uma pessoa autorizada.</p>
</blockquote>
<p><img src="/controles-fisicos/mantrap.jpg" alt="Mantrap"></p>
<h2 id="leitores-biométricos">Leitores Biométricos</h2>
<p>Baseiam-se em características físicas de uma pessoa para identificá-las, sendo as partes mais comuns: <strong>impressão digital, olhos e vasos sanguíneos da mão.</strong> Biometria é considerado “algo que você é” (something you are).</p>
<p>Sistemas biométricos possuem avaliações sobre taxas de sucesso e falha baseadas em 3 métricas chamadas FAR, FRR e CER, na qual não entraremos em detalhes nesse artigo.</p>
<h2 id="supressão-de-fogo">Supressão de Fogo</h2>
<p>Os sistemas de supressão de fogo são uma parte importante de segurança do local e ajudam na resiliência, <strong>reduzindo o potencial de incêndios</strong> catastróficos, protegendo funcionários, dados e edificações de uma organização.</p>
<p>Existem diversos tipos de extintores, cada um específico para uma situação. Normalmente os extintores de Pó Químico e Gás Carbônico são os recomendados para incêndios da Classe C (equipamentos elétricos energizados).
Sprinkler (Chuveiro Automático)</p>
<p>Um sprinkler é um dispositivo comumente utilizado no combate a incêndios que age de maneira automática. Ele é composto de uma “armadura” e um elemento sensível, chamado bulbo.</p>
<p><strong>Sistemas de Sprinklers de Tubos Molhados</strong> — Os tubos estão cheios de água até à cabeça do chuveiro e estão apenas à espera que o bulbo seja derretido ou partido.</p>
<p><strong>Sistema de Sprinklers de Tubos Secos</strong> — Os tubos são enchidos com ar pressurizado e só empurram água para dentro quando necessário para combater o fogo.</p>
<p><strong>Sistema de Sprinklers com Proteção Especial</strong> — O sistema de tubulação é preenchido com gás (HALON, FM-200 ou CO2) em vez de água.</p>
<h2 id="blindagem">Blindagem</h2>
<p>O Par trançado blindado (STP) adiciona uma camada de blindagem no interior do cabo para evitar possíveis danos e modificações.</p>
<p><strong>Gaiola de Faraday</strong> — Blindagem instalada em volta de uma sala inteira que impede a entrada ou saída de energia eletromagnética, bloqueando campos eletromagnéticos e frequência de rádio da sala.</p>
<p><strong>TEMPEST</strong> — Norma governamental dos Estados Unidos para o nível de blindagem exigido em um edifício para assegurar que as emissões e interferências não possam entrar ou sair da instalação. Essas instalações também são resistentes aos EMPs (pulsos eletromagnéticos).</p>
<h2 id="sistema-de-controle-de-acesso-físico-pacs">Sistema de Controle de Acesso Físico (PACS)</h2>
<p>Componentes e protocolos que facilitam a <strong>configuração centralizada</strong> e o monitoramento dos mecanismos de segurança dentro dos escritórios e datacenters. O PACS pode ser implementado como parte de um sistema de automação predial ou como um sistema separado.</p>
<p>Esse sistema concede acesso aos funcionários que trabalham ou visitam um local, autenticando eletronicamente suas credenciais. Embora os PACS sejam sistemas de TI, eles devem ser projetados, implantados e operados em cooperação com as equipes de Segurança Física para atender com sucesso as necessidades da empresa.</p>
<h2 id="outros">Outros</h2>
<p>A <strong>iluminação</strong> desempenha um papel na segurança exterior e interior, tanto sendo usada para desencorajar intrusos ou para ajudar os funcionários a se sentirem mais seguros.</p>
<p>Os <strong>crachás</strong> podem desempenhar uma série de papéis na segurança física. Além de serem processados por acesso de entrada via banda magnética e sistemas de radiofrequência (RFID), os crachás frequentemente incluem uma foto e outras informações que podem rapidamente permitir ao pessoal e aos guardas determinar se a pessoa é quem dizer ser, que áreas e acessos devem ter, e se é funcionário ou convidado.</p>
<p><strong>Sistemas e alarmes</strong> são usados para detectar e alertar sobre problemas, incluindo acesso não autorizado, problemas ambientais e incêndios.</p>
<p><strong>Guardas de segurança</strong> são usados em áreas onde a interação humana é necessária ou útil. Os <strong>registros de visitantes</strong> são um controle comum, usados em conjunto com os guardas, porque evidenciam quem passou pela empresa naquele momento caso aconteça algo suspeito.</p>
<h2 id="zonas-de-segurança-melhoradas-e-áreas-seguras">Zonas de Segurança Melhoradas e Áreas Seguras</h2>
<p>Um projetor de corredor quente/corredor frio coloca entradas e exaustores de ar em corredores alternados para garantir um fluxo de ar adequado, permitindo que os projetistas de datacenter saibam onde fornecer ar frio e onde o exaustor precisa ser colocado.</p>
<p>A segurança de rede também desempenha um papel em áreas seguras, incluindo o uso de uma <strong>sub-rede com tela</strong> (também frequentemente chamada de <strong>zona desmilitarizada [DMZ]</strong>). As sub-redes dependem de dispositivos de segurança como firewalls para fornecer <strong>segmentações</strong> que limitam o fluxo de tráfego de entrada e saída delas, mantendo assim zonas de segurança mais elevadas seguras.</p>
<p><img src="/controles-fisicos/DMZ.png" alt="Zona Desmilitarizada (DMZ)"></p>
<p><strong>Air-gaps</strong> são arquiteturas utilizadas para segmentar redes fisicamente, impedindo assim a conectividade entre elas.</p>
<p>As instalações governamentais e outras instalações de segurança extremamente alta podem utilizar travas, fixar conduítes e canais de cabos, vedações invioláveis e até mesmo cabos que possam detectar tentativas de acesso através de mudanças de pressão, mudanças na condutividade da blindagem, entre outras técnicas.</p>
<h2 id="destruição-segura-de-dados">Destruição Segura de Dados</h2>
<p>Quando os dados chegam ao fim de sua utilidade, a <strong>destruição da mídia</strong> que os contém é uma medida importante de segurança física. A destruição segura ajuda a prevenir problemas com dados e informações, incluindo ataques intencionais como “mergulho no lixo” (dumpster diving), bem como perdas não intencionais através da reutilização de mídias, sistemas ou outros dispositivos de armazenamento de dados.</p>
<h2 id="métodos-de-destruição-de-dados">Métodos de Destruição de Dados</h2>
<p><strong>Queima</strong><br>
A maioria das vezes é feito em um incinerador de alta temperatura. Usado principalmente para registros em papel, embora alguns incineradores possam suportar dispositivos eletrônicos. Normalmente feito fora do local através de um terceiro, não deixa materiais recuperáveis.</p>
<p><strong>Trituração</strong><br>
Pode ser feito no local, suportando papel ou dispositivos usando uma trituradora industrial. As trituradoras de papel tradicionais <strong>podem permitir a recuperação de documentos</strong>, mesmo de documentos triturados transversalmente. Para ambientes de alta segurança, pode ser necessária a queima ou a polpação.</p>
<p><strong>Polpação</strong><br>
Quebra dos documentos de papel em farelos de madeira, <strong>removendo a tinta</strong>. Os materiais podem ser reciclados. Destrói completamente os documentos para evitar a recuperação.</p>
<p><strong>Pulverização</strong><br>
Quebra dos dispositivos em <strong>pedaços</strong> para impedir a recuperação. O tamanho do material de saída pode determinar o potencial de recuperação dos dados. Tipicamente a pulverização resulta em fragmentos muito pequenos.</p>
<p><strong>Desmagnetização</strong><br>
Limpa <strong>magneticamente</strong> os dados de fitas e meios magnéticos tradicionais como discos rígidos. Somente eficaz em mídia magnética; não funcionará em SSDs, mídia flash, mídia óptica ou papel.</p>
<p>A <strong>destruição física</strong> é a forma mais segura de garantir a destruição de dados, mas as opções não destrutivas são muitas vezes desejáveis em um ambiente comercial para permitir a reutilização de mídias ou dispositivos.</p>
<p>Uma opção final que muitas organizações optam por colocar em prática para a destruição segura é o uso de soluções de terceiros.</p>
<h2 id="conclusão">Conclusão</h2>
<p>É de extrema importância que o acesso físico aos dados da empresa ou aos equipamentos que contém essas informações sejam devidamente protegidos. Caso algum atacante malicioso consiga esse acesso, danos irreversíveis podem vir a acontecer.</p>
<p>Como citados acima, existem muitos controles para garantir que esses acesso sejam feitos de maneira segura e confiável, seja com controles automáticos ou manuais, ou até mesmo, com a mistura dos dois elementos.</p>
<p>Também é de suma importância garantir que as mídias que não são mais utilizadas tenham um destino correto, para evitar que os dados contidos nelas não acabem caindo em mãos erradas.</p>
]]></content>
        </item>
        
        <item>
            <title>Um resumo sobre a OWASP TOP 10 [2017]</title>
            <link>https://b1d0ws.github.io/posts/owasp2017/</link>
            <pubDate>Thu, 24 Jun 2021 15:20:50 -0300</pubDate>
            
            <guid>https://b1d0ws.github.io/posts/owasp2017/</guid>
            <description>O que é? OWASP é um projeto aberto que disponibiliza artigos e documentos, gratuitamente feitos pela comunidade, que foca em segurança da informação, área da TI que vem se expandindo cada vez mais.
OWASP top 10 é uma lista das vulnerabilidades mais perigosas encontradas em aplicações web, sendo a última lista elaborada em 2017. Também existe as versões pra mobile e API que são menos conhecidas.
Todo profissional de segurança ou desenvolvedor deveria saber pelo menos o básico sobre essas vulnerabilidades.</description>
            <content type="html"><![CDATA[<h2 id="o-que-é">O que é?</h2>
<p>OWASP é um projeto aberto que disponibiliza artigos e documentos, gratuitamente feitos pela comunidade, que foca em segurança da informação, área da TI que vem se expandindo cada vez mais.</p>
<p>OWASP top 10 é uma lista das vulnerabilidades mais perigosas encontradas em aplicações web, sendo a última lista elaborada em 2017. Também existe as versões pra mobile e API que são menos conhecidas.</p>
<p>Todo profissional de segurança ou desenvolvedor deveria saber pelo menos o básico sobre essas vulnerabilidades. Como esse artigo abrange a lista inteira, não vou entrar em muitos detalhes em cada tópico, mas você pode facilmente encontrar materiais sobre eles por aí, inclusive no próprio site da OWASP.</p>
<p>OWASP → <a href="https://owasp.org/">https://owasp.org/</a>
OWASP top 10 → <a href="https://owasp.org/www-project-top-ten/">https://owasp.org/www-project-top-ten/</a></p>
<h2 id="1-injection">1. Injection</h2>
<p>Falhas de Injeção como injeções SQL, NoSQL, OS e LDAP, ocorrem quando dados não confiáveis são enviados para um interpretador como parte de um comando ou query.</p>
<p>O dado enviado pelo atacante pode enganar o interpretador para executar comandos não intencionais ou acessar dados sem a autorização apropriada.</p>
<h3 id="exemplos">Exemplos</h3>
<p>SQL Injection — Quando conseguimos injetar um trecho de código por um input que afetará o banco de dados.</p>
<p><strong>Uma situação simples para explicar essa técnica é usar o trecho:</strong><br>
password&rsquo; OR 1=1<br>
Como resultado, o banco rodará a seguinte query:<br>
SELECT id FROM users WHERE username='username&rsquo; AND password='password&rsquo; OR 1=1&rsquo;</p>
<h3 id="impactos">Impactos</h3>
<p>Injeções podem resultar em perda e corrupção de dados, negação de acesso, acessos não autorizados e até mesmo perda total do sistema. Tudo depende do qual é a aplicação e seus dados.</p>
<h3 id="prevenção">Prevenção</h3>
<p>Usar uma lista de controle que retorna se o caractere é seguro ou não. Se não for seguro, o servidor retornará como erro.</p>
<p>Stripping Input — Remover os caracteres perigosos antes de processar o input inserido.</p>
<h3 id="referências">Referências</h3>
<p><a href="https://owasp.org/www-project-top-ten/2017/A1_2017-Injection">https://owasp.org/www-project-top-ten/2017/A1_2017-Injection</a> <a href="https://www.acunetix.com/websitesecurity/sql-injection/">https://www.acunetix.com/websitesecurity/sql-injection/</a></p>
<h2 id="2-broken-authentication">2. Broken Authentication</h2>
<p>Funções de aplicação relacionadas à autenticação e gerenciamento de sessões são frequentemente implementadas incorretamente, permitindo atacantes a comprometer senhas, chaves ou tokens de sessão, ou explorar outras falhas de implementação para assumir a identidade de outros usuários.</p>
<h3 id="exemplos-1">Exemplos</h3>
<p>Ataques de Força Bruta — Se o site usa usuário e senha, a chance de brute force é existente.</p>
<p>Credenciais Fracas — Aplicações web devem colocar políticas de senhas fortes para evitar ataques de força bruta ou até mesmo adivinhações de senha.</p>
<p>Sessões de Cookies Fracas — Se o site usa cookies previsíveis e não controlados, o atacante pode manipular seus cookies para conseguir acessos indevidos.</p>
<p>Timeout de sessões não configuradas também não são ideais, pois alguém mal intencionado por vir a usar o usuário de outra pessoa e ter acesso ao login dela por estar salvo no navegador.</p>
<h3 id="impactos-1">Impactos</h3>
<p>Atacantes podem ganhar acesso a algumas contas de usuário ou apenas uma conta de administrador que pode comprometer todo o sistema. Dependendo da aplicação do sistema, isso pode permitir lavagem de dinheiro, fraude social, roubo de identidade e divulgação de informação sensíveis.</p>
<h3 id="prevenção-1">Prevenção</h3>
<p>Para evitar força bruta, coloque limite de tentativas para login e determine uma política forte de senha.</p>
<p>Para evitar adivinhações, requisite senhas fortes na criação do usuário. Outra maneira fortíssima de evitar sessões indevidas é colocar autenticação em dois fatores.</p>
<p>Não mantenha sessões ativas por muito tempo.</p>
<h3 id="referências-1">Referências</h3>
<p><a href="https://owasp.org/www-project-top-ten/2017/A2_2017-Broken_Authentication">https://owasp.org/www-project-top-ten/2017/A2_2017-Broken_Authentication</a></p>
<h2 id="3-sensitive-data-exposure">3. Sensitive Data Exposure</h2>
<p>Muitas aplicações web e APIs não protegem dados sensíveis, como finanças, saúde e PII (Informação pessoalmente identificável), de maneira apropriada.</p>
<p>Dados confidenciais sem proteção extra, como criptografia, podem ser comprometidos, e requerem precauções especiais quando trocados com o navegador.</p>
<h3 id="exemplos-2">Exemplos</h3>
<p>A falha mais comum desse tipo é a não encriptação de dados sensíveis. Uma aplicação criptografa números de cartão de crédito para armazená-los em um banco de dados. Contudo, esse dado é descriptografado quando retornado, permitindo um SQL Injection para retornar os números de cartão em texto puro.</p>
<p>Um atacante conseguiu acesso à base de dados com as senhas. Para aplicar os hashes, não foi usado Salt/Pepper e isso é um problema, pois agora ele pode comparar as senhas hasheadas com uma tabela rainbow para descobrir quais são elas.</p>
<p>Um site não usa TLS (Transport Layer Security) para todas as páginas ou usa criptografias fracas. Um atacante pode monitorar o tráfego de rede, transformar conexões HTTPS em HTTP, interceptar as requisições e roubar o cookie de sessão do usuário. Fazendo isso, ele terá acesso ao perfil do mesmo.</p>
<h3 id="impactos-2">Impactos</h3>
<p>Nos últimos anos, esse vem sendo o ataque de impacto mais comum. Atacantes podem roubar ou modificar tais dados para conduzir fraudes de cartão de crédito, roubo de identidade, entre outros crimes.</p>
<h3 id="prevenção-2">Prevenção</h3>
<p>Classificar os dados processados e tratá-los com a segurança necessária.</p>
<p>Não armazenar dados sensíveis sem necessidade.</p>
<p>Verificar se não existem dados transmitidos em texto puro e algoritmos de criptografias fracos/antigos.</p>
<p>Armazenar senhas usando hashs adaptadas com uso de salt e funções como Argon2 e PBKDF2.</p>
<h3 id="referências-2">Referências</h3>
<p><a href="https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure">https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure</a></p>
<h2 id="4-xml-external-entities-xxe">4. XML External Entities (XXE)</h2>
<p>Processadores XML antigos ou mal configurados validam referências de entidades externas dentro de documentos XML. Entidades externas podem ser usadas para incluir conteúdos maliciosos, assim explorando vulnerabilidades de código, dependências e integrações.</p>
<p>XML é uma linguagem de marcação legível tanto para humanos quanto para máquinas e serve para armazenar e transportar dados.</p>
<h3 id="exemplos-3">Exemplos</h3>
<p>Abaixo segue um exemplo de XML que pode extrair dados do arquivo /etc/passwd:</p>
<!-- raw HTML omitted -->
<!-- raw HTML omitted -->
<!-- raw HTML omitted -->
<!-- raw HTML omitted -->
<p><!-- raw HTML omitted -->&amp;xxe;<!-- raw HTML omitted --></p>
<h3 id="impactos-3">Impactos</h3>
<p>Essa vulnerabilidade pode ser usada para leitura e compartilhamentos de arquivos internos, escaneamento de portas, execução remota de códigos, negação de serviço e diversos outros ataques.</p>
<h3 id="prevenção-3">Prevenção</h3>
<p>Sempre que possível use formatos de dados menos complexos como JSON e evite serialização de dados sensíveis.</p>
<p>Serialização é o processo de converter objetos em formatos mais simples e compatível para transmiti-los entre sistemas de maneira mais prática.</p>
<p>Implemente validações ou filtros de input no servidor (whitelisting).
Desabilite entidades externas em todos os parsers XML da aplicação.</p>
<h3 id="referências-3">Referências</h3>
<p><a href="https://owasp.org/www-project-top-ten/2017/A4_2017-XML_External_Entities_(XXE)">https://owasp.org/www-project-top-ten/2017/A4_2017-XML_External_Entities_(XXE)</a></p>
<h2 id="5-broken-access-control">5. Broken Access Control</h2>
<p>Restrições sobre o que o usuário tem acesso para fazer são frequentemente não apropriadas. Atacantes podem explorar essas falhas para acessar funcionalidades ou dados não autorizados, como acessar contas de outros usuários, ver dados sensíveis, modificar dados alheios e direitos de acesso, etc.</p>
<h3 id="exemplos-4">Exemplos</h3>
<p>Usuários não autorizados acessam páginas que deveriam ser restritas como /admin.</p>
<p>IDOR, Insecure Direct Object Reference — Ato de explorar um configuração mal feita de referência de objeto.
Ex: <a href="https://example.com/bank?account_number=1234">https://example.com/bank?account_number=1234</a>. Se eu trocar o account_number eu acessarei a conta de outro usuário.</p>
<h3 id="impactos-4">Impactos</h3>
<p>O atacante pode ter acessos a conta de outro usuário ou até mesmo de administrador e a partir disso fazer o que bem entender com os privilégios alcançados, principalmente atualizando e deletando registros.</p>
<h3 id="prevenção-4">Prevenção</h3>
<p>Tokens JWT devem ser invalidados no servidor após o logout.</p>
<p>Implementar mecanismos de controle de acesso e reusá-lo em toda aplicação, incluindo minimizar o uso de CORS.</p>
<p>Ter logs de falha de acessos e alertar os administradores quando apropriado (falhas repetidas).</p>
<h3 id="referências-4">Referências</h3>
<p><a href="https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control">https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control</a></p>
<h2 id="6-security-misconfiguration">6. Security Misconfiguration</h2>
<p>Configurações incorretas são as vulnerabilidades mais comum entre as citadas. Isso acontece por uma variedade de configurações padrões inseguras, armazenamentos em nuvem abertos, cabeçalhos HTTP incorretos e mensagens de erro contendo informações sensíveis.</p>
<p>Não só todos os sistemas operacionais, frameworks, bibliotecas e aplicações devem ser seguramente configuradas, mas também corrigidas e atualizadas em tempo hábil.</p>
<h3 id="exemplos-5">Exemplos</h3>
<p>A aplicação do servidor vem com outras aplicações de amostra que não foram removidos do servidor de produção. Essas amostras têm vulnerabilidades conhecidas, oferecendo um potencial de comprometimento do servidor.</p>
<p>Senhas padrão mantidas em aplicações que estão disponível a todos.</p>
<h3 id="impactos-5">Impactos</h3>
<p>Essas vulnerabilidades frequentemente dão aos atacantes acessos não autorizados a dados ou funcionalidades do sistema. Ocasionalmente, elas podem resultar no comprometimento completo da aplicação.</p>
<h3 id="prevenção-5">Prevenção</h3>
<p>Não use sistemas com credenciais padrão, especialmente para contas de admin.</p>
<p>Um sistema de backup deve existir para rapidamente subir um novo ambiente para substituir o que está atualmente em produção caso algo aconteça.</p>
<p>A plataforma de aplicação deve ter o mínimo necessário, sem recursos e componentes desnecessários.</p>
<p>Deve existir a prática de revisar e atualizar as configurações de todas as medidas de segurança.</p>
<p>Os softwares e processos usados devem ser instalados de maneira compatível com a aplicação.</p>
<h3 id="referências-5">Referências</h3>
<p><a href="https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration">https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration</a></p>
<h2 id="7-cross-site-scripting-xss">7. Cross-Site Scripting (XSS)</h2>
<p>Falhas de XSS ocorrem quando uma aplicação inclui dados não confiáveis em uma nova página web sem a validação apropriada. XSS permite atacantes executarem scripts no navegador da vítima que podem roubar sessões de usuário, desfigurar sites ou redirecionar outros clientes para sites maliciosos.</p>
<h3 id="exemplos-6">Exemplos</h3>
<p>A forma mais clássica de se testar um XSS é colocando em algum formulário o código abaixo.</p>
<!-- raw HTML omitted -->
<p>Se um alerta for exibido na tela, a aplicação está vulnerável a XSS. Se o alerta não for exibido, não podemos confirmar que não existem outras brechas para XSS no site.</p>
<h3 id="impactos-6">Impactos</h3>
<p>XSS refletidos e DOM XSS tem impactos moderados. XSS armazenados são severos com execução remota de códigos no navegador da vítima, como roubo de credenciais e sessões ou entregando um malware para ela.</p>
<h3 id="prevenção-6">Prevenção</h3>
<p>A melhor prevenção para XSS é validar todo tipo de entrada e tratá-las corretamente limitando o tamanho do campo a ser inserido, definindo o conjunto de caracteres aceitos ou estabelecendo uma expressão regular para os dados.</p>
<p>Existem frameworks que já “escapam” os códigos inseridos através de XSS.</p>
<h3 id="referências-6">Referências</h3>
<p><a href="https://owasp.org/www-project-top-ten/2017/A7_2017-Cross-Site_Scripting_(XSS)">https://owasp.org/www-project-top-ten/2017/A7_2017-Cross-Site_Scripting_(XSS)</a></p>
<h2 id="8-insecure-deserialization">8. Insecure Deserialization</h2>
<p>Serialização é o processo de converter objetos em formatos mais simples e compatível para transmiti-los entre sistemas de maneira mais prática.</p>
<p>Deserialização é o processo inverso e atacantes podem usar de processos internos se essa for mal configurada.</p>
<h3 id="exemplos-7">Exemplos</h3>
<p>Um site PHP usa deserialização de objeto para salvar um super cookie, contento informações do usuário como ID, função, senha hashada e estado:<br>
a:4:{i:0;i:132;i:1;s:7:&ldquo;Mallory&rdquo;;i:2;s:4:&ldquo;user&rdquo;; i:3;s:32:&ldquo;b6a8b3bea87fe0e05022f8f3c88bc960&rdquo;;}</p>
<p>Um atacante pode modificar o objeto serializado para conseguir permissões de admin:<br>
a:4:{i:0;i:1;i:1;s:5:&ldquo;Alice&rdquo;;i:2;s:5:&ldquo;admin&rdquo;; i:3;s:32:&ldquo;b6a8b3bea87fe0e05022f8f3c88bc960&rdquo;;}</p>
<h3 id="impactos-7">Impactos</h3>
<p>Deserialização insegura frequentemente leva em execução remota de código. Mesmo se a deserialização não resulte nisso, ela pode ser usada para executar ataques, incluindo ataques de injeção e elevação de privilégio.</p>
<h3 id="prevenção-7">Prevenção</h3>
<p>A maioria das linguagens de programação contêm bibliotecas que provêm deserializações seguras. Se a linguagem não conter uma, você terá que checar os inputs do usuário antes de qualquer outro processo.</p>
<h3 id="referências-7">Referências</h3>
<p><a href="https://owasp.org/www-project-top-ten/2017/A8_2017-Insecure_Deserialization">https://owasp.org/www-project-top-ten/2017/A8_2017-Insecure_Deserialization</a></p>
<h2 id="9-using-components-with-known-vulnerabilities">9. Using Components with Known Vulnerabilities</h2>
<p>Componentes como bibliotecas, frameworks, e outros módulos de software, rodam com os mesmos privilégios que a aplicação. Se um componente vulnerável é explorado, um ataque desses pode facilitar sérias perdas de dados ou derrubamentos de servidor.</p>
<h3 id="exemplos-8">Exemplos</h3>
<p>Os exemplos nesse caso são vulnerabilidades já descobertas. Um caso é a execução remota de códigos do Struts 2. Você pode encontrá-la nesse link.</p>
<h3 id="impactos-8">Impactos</h3>
<p>Aplicações e APIs usando componentes com vulnerabilidades conhecidas podem enfraquecer as defesas do aplicativo e permitir vários outros ataques. Dependendo da falha encontrada o impacto pode ser desastroso.</p>
<h3 id="prevenção-8">Prevenção</h3>
<p>Remover componentes, arquivos, dependências e recursos não utilizados.</p>
<p>Apenas obter componentes de sites oficiais e links seguros.</p>
<p>Monitorar se bibliotecas e recursos têm versões mais atualizadas de patches de segurança.</p>
<h3 id="referências-8">Referências</h3>
<p><a href="https://owasp.org/www-project-top-ten/2017/A9_2017-Using_Components_with_Known_Vulnerabilities">https://owasp.org/www-project-top-ten/2017/A9_2017-Using_Components_with_Known_Vulnerabilities</a></p>
<h2 id="10-insufficient-logging--monitoring">10. Insufficient Logging &amp; Monitoring</h2>
<p>Log e monitoramento insuficiente, junto com integrações ineficazes com resposta a incidentes, permite que o atacante mantenha seus ataques com mais persistência, mova-se para mais sistemas e altere ou destrua dados.</p>
<p>Estudos dizem que o tempo para detectar uma violação é de mais de 200 dias, normalmente detectado por partes externas em vez de processos internos de monitoramento.</p>
<h3 id="exemplos-9">Exemplos</h3>
<p>Um atacante usa scans para usuários com senhas comuns, assim ele pode conseguir acesso a vários perfis usando essas senhas. Para todos os outros usuários, esse scan deixa apenas um login incorreto registrado. Depois de alguns dias, isso pode ser repetido com uso de outras senhas.</p>
<h3 id="impactos-9">Impactos</h3>
<p>A maioria dos ataques sucedidos vêm de investigações de vulnerabilidades. Permitir que essas investigações continuem aumentam a chance de você ser atacado quase em 100%.</p>
<p>Em 2016, identificar tentativas de invasão demoravam em média 191 dias, tempos suficiente para o dano ser causado.</p>
<h3 id="prevenção-9">Prevenção</h3>
<p>Garantir que os logs são gerados em um formato facilmente compreensível por um gerenciador de log centralizado.</p>
<p>Estabelecer monitoramentos e alertas que detectem casos de atividades suspeitas em tempo hábil.</p>
<p>Estabelecer ou adotar uma plano de recuperação ou de resposta a incidentes.</p>
<h3 id="referências-9">Referências</h3>
<p><a href="https://owasp.org/www-project-top-ten/2017/A10_2017-Insufficient_Logging%2526Monitoring">https://owasp.org/www-project-top-ten/2017/A10_2017-Insufficient_Logging%2526Monitoring</a></p>
<h2 id="conclusão">Conclusão</h2>
<p>Após entendermos sobre as vulnerabilidades mais comuns, podemos entender a maioria dos ataques feitos em aplicações web.</p>
<p>Esse top 10 é apenas uma parte do conteúdo gigantesco que a OWASP proporciona sobre segurança da informação. Se você trabalha na área é provável que vá acompanhar esse projeto aberto em grande parte da sua carreira.</p>
<p>Acredito que essa lista também passe uma boa noção para os desenvolvedores que querem manter suas aplicações um pouco mais seguras. Aplicando os conceitos tratados você com certerá deixará seu desenvolvimento extremamente mais seguro.</p>
<p>Obrigado por ler até aqui e qualquer dúvida você pode entrar em contato comigo pelo Linkedin.</p>
<p>Até mais ver =).</p>
]]></content>
        </item>
        
    </channel>
</rss>
